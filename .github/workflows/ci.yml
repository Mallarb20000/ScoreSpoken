name: CI - Build & Deploy

on:
  push:
    branches: [main]
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Lint
        run: poetry run python -m flake8 . || true
      - name: Test
        run: poetry run python manage.py test
      - name: Build Docker image
        run: docker build -t ghcr.io/YOUR_ORG/your-backend:latest .

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Enable Corepack
        run: corepack enable
      - name: Install dependencies
        run: pnpm install
      - name: Lint
        run: pnpm lint || true
      - name: Test
        run: pnpm test || true
      - name: Build Docker image
        run: docker build -t ghcr.io/YOUR_ORG/your-frontend:latest .

  push-images:
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Login to registry (GHCR example, adjust for ECR or Docker Hub as needed)
      - name: Login to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Push backend image
      - name: Push backend image
        run: docker push ghcr.io/YOUR_ORG/your-backend:latest

      # Push frontend image
      - name: Push frontend image
        run: docker push ghcr.io/YOUR_ORG/your-frontend:latest

      # (Optional) Update Dockerrun.aws.json image URLs if you use dynamic tags

      # Save Dockerrun.aws.json as artifact for next job
      - name: Upload Dockerrun.aws.json
        uses: actions/upload-artifact@v4
        with:
          name: dockerrun
          path: Dockerrun.aws.json

  deploy-eb:
    needs: push-images
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      # Download Dockerrun.aws.json
      - name: Download Dockerrun.aws.json
        uses: actions/download-artifact@v4
        with:
          name: dockerrun

      # Configure AWS credentials (OIDC preferred, or access keys)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-south-1
          role-to-assume: arn:aws:iam::537976614557:role/Github
          # or use aws-access-key-id / aws-secret-access-key

      # Deploy to Elastic Beanstalk
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          application_name: 'scorespoken-prod'
          environment_name: 'scorespoken-prod-env'
          version_label: ${{ github.sha }}
          region: 'ap-south-1'
          deployment_package: 'Dockerrun.aws.json'
