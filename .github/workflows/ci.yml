name: CI - Build & Deploy

on:
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python & Poetry
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        working-directory: backend
        run: poetry install

      - name: Run tests
        working-directory: backend
        run: poetry run python manage.py test


      - name: Login to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        working-directory: backend
        run: docker build -t ghcr.io/mallarb20000/score-backend:${{ env.IMAGE_TAG }} .

      - name: Push Docker image
        run: docker push ghcr.io/mallarb20000/score-backend:${{ env.IMAGE_TAG }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::537976614557:role/Github
          aws-region: eu-north-1

      - name: Prepare Dockerrun.aws.json for deployment
        run: |
          sed -i "s/\${IMAGE_TAG}/${{ env.IMAGE_TAG }}/g" Dockerrun.aws.json

      - name: List files before bundling
        run: ls -laR

      - name: Create deployment bundle
        run: zip -r deploy.zip Dockerrun.aws.json .ebextensions

      - name: List contents of deployment bundle
        run: unzip -l deploy.zip

      - name: Upload bundle to S3
        run: aws s3 cp deploy.zip s3://scorespoken-assests-prod/deploy-${{ env.IMAGE_TAG }}.zip

      - name: Create new Elastic Beanstalk app version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name scorespoken-prod \
            --version-label ${{ env.IMAGE_TAG }} \
            --source-bundle S3Bucket=scorespoken-assests-prod,S3Key=deploy-${{ env.IMAGE_TAG }}.zip \
            --region eu-north-1

      - name: Run migrations on the new version
        run: |
          aws elasticbeanstalk update-environment \
            --application-name scorespoken-prod \
            --environment-name Scorespoken-prod-env \
            --option-settings Namespace=aws:elasticbeanstalk:application:environment,OptionName=RUN_MIGRATIONS,Value=true \
            --region eu-north-1
      - name: Deploy new version to Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
            --application-name scorespoken-prod \
            --environment-name Scorespoken-prod-env \
            --version-label ${{ env.IMAGE_TAG }} \
            --region eu-north-1
